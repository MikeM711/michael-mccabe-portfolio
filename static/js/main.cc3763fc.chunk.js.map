{"version":3,"sources":["img/michael-pic.png","img/parseit.png","img/youtube-scraper.png","img/handwriting-recognition.png","nav-items/navbar.tsx","nav-items/navbar-mobile.tsx","nav-items/nav-home-animation.tsx","nav-items/nav-home.tsx","nav-items/nav-experience.tsx","nav-item-components/os-contributions-card.tsx","data/os-contributions-data.tsx","nav-items/nav-open-source.tsx","nav-item-components/project-card.tsx","nav-item-components/project-tablet-display.tsx","data/project-data.tsx","nav-items/nav-projects.tsx","nav-items/nav-presentations.tsx","nav-items/nav-current.tsx","nav-item-components/project-card-mobile.tsx","mobile-components/mobile-projects.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","NavBar","handleNavItem","activeComponent","useEffect","elem","document","querySelectorAll","M","Tabs","init","handleClick","item","e","className","href","onClick","id","icon","faHome","faToolbox","faCode","faLayerGroup","faChartBar","faBolt","NavBarMobile","NavHomeAnimation","useState","stringDisplay","setStringDisplay","insertString","str","Promise","res","rej","setTimeout","removeString","pauseAnimation","msWait","a","experienceCycle","j","length","experience","i","slice","runAnimation","formattedSubText","split","subText","map","idx","key","NavHome","exp","getElementById","click","faAngleRight","src","profileImage","alt","style","filter","NavExperience","OSContributionsCard","title","problem","solution","prUrl","submittedCodeUrl","tools","tool","target","OSContributionsData","NavOpenSource","contribution","ProjectCard","repo","description","undefined","stargazers_count","forks_count","faCodeBranch","singleDescription","faLaptopCode","ProjectTabletDisplay","appImage","projectData","parseit","youtubeScraper","handwritingRecognition","MobileProjects","repositories","project","projectRepo","name","repoName","projectImage","NavPresentations","frameBorder","allow","allowFullScreen","NavCurrent","ProjectCardMobile","App","window","innerWidth","windowSize","setWindowSize","setActiveComponent","setRepositories","isMobile","addEventListener","axios","get","then","data","navItem","CSSTransition","timeout","enter","appear","in","classNames","unmountOnExit","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cc3763fc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/michael-pic.a2d217b4.png\";","module.exports = __webpack_public_path__ + \"static/media/parseit.7b15c156.png\";","module.exports = __webpack_public_path__ + \"static/media/youtube-scraper.280b8e8d.png\";","module.exports = __webpack_public_path__ + \"static/media/handwriting-recognition.6618892a.png\";","import React, { useEffect } from \"react\";\nimport M from \"materialize-css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; \nimport { faBolt, faChartBar, faCode, faHome, faLayerGroup, faToolbox } from '@fortawesome/free-solid-svg-icons';\n\nimport './navbar.css';\n\ninterface Props {\n  handleNavItem: (item: string) => void;\n  activeComponent: string;\n}\n\nconst NavBar: React.FC<Props> = ({handleNavItem, activeComponent}) => {\n\n  useEffect(() => {\n    // tabs initialization\n    const elem = document.querySelectorAll(\".tabs\");\n    const options = {};\n    const instance = M.Tabs.init(elem, options);\n  }, []);\n\n  // https://stackoverflow.com/a/56863941\n  const handleClick = (item:string) => (e: React.MouseEvent<HTMLAnchorElement>) => {\n    handleNavItem(item);\n  }\n\n  return (\n    <div className=\"site-navbar\">\n      <div className=\"row\">\n        <div className=\"col s12\">\n          <ul className=\"tabs\">\n            <li className=\"tab col l2\">\n              <a className={activeComponent === \"home\" ? \"active\" : \"inactive\"} \n                href=\"#home\" onClick={handleClick(\"home\")} id=\"home_id\">\n                <span>Home</span>\n                <FontAwesomeIcon className=\"home fa-3x\" icon={faHome} />\n              </a>\n            </li>\n\n            <li className=\"tab col l2\">\n              <a className={activeComponent === \"experience\" ? \"active\" : \"inactive\"}\n                href=\"#experience\" onClick={handleClick(\"experience\")} id=\"experience_id\">\n                <span>Experience</span>\n                <FontAwesomeIcon className=\"experience fa-3x\" icon={faToolbox} />\n              </a>\n            </li>\n\n            <li className=\"tab col l2\">\n              <a className={activeComponent === \"open-source\" ? \"active\" : \"inactive\"}\n                href=\"#open-source\" onClick={handleClick(\"open-source\")} id=\"open-source_id\">\n                <span>Open Source</span>\n                <FontAwesomeIcon className=\"open-source fa-3x\" icon={faCode} />\n              </a>\n            </li>\n\n            <li className=\"tab col l2\">\n              <a className={activeComponent === \"projects\" ? \"active\" : \"inactive\"}\n                href=\"#projects\" onClick={handleClick(\"projects\")} id=\"projects_id\">\n                <span>Projects</span>\n                <FontAwesomeIcon className=\"projects fa-3x\" icon={faLayerGroup} />\n              </a>\n            </li>\n\n            <li className=\"tab col l2\">\n              <a className={activeComponent === \"presentations\" ? \"active\" : \"inactive\"}\n                href=\"#presentations\" onClick={handleClick(\"presentations\")} id=\"presentations_id\">\n                <span>Presentations</span>\n                <FontAwesomeIcon className=\"presentations fa-3x\" icon={faChartBar} />\n              </a>\n            </li>\n\n            <li className=\"tab col l2\">\n              <a className={activeComponent === \"current\" ? \"active\" : \"inactive\"}\n                href=\"#current\" onClick={handleClick(\"current\")} id=\"current_id\">\n                <span>Current</span>\n              <FontAwesomeIcon className=\"current fa-3x\" icon={faBolt} />\n              </a>\n            </li>\n\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React, { useEffect } from \"react\";\nimport M from \"materialize-css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; \nimport { faBolt, faChartBar, faCode, faHome, faLayerGroup, faToolbox } from '@fortawesome/free-solid-svg-icons';\n\nimport './navbar-mobile.css';\n\ninterface Props {\n  handleNavItem: (item: string) => void;\n  activeComponent: string;\n}\n\nconst NavBarMobile: React.FC<Props> = ({handleNavItem, activeComponent}) => {\n\n  useEffect(() => {\n    // tabs initialization\n    const elem = document.querySelectorAll(\".tabs\");\n    const options = {};\n    const instance = M.Tabs.init(elem, options);\n  }, []);\n\n  // https://stackoverflow.com/a/56863941\n  const handleClick = (item:string) => (e: React.MouseEvent<HTMLAnchorElement>) => {\n    handleNavItem(item);\n  }\n\n  return (\n    <div className=\"mobile-site-navbar\">\n          <ul className=\"tabs\">\n            <li className=\"tab\">\n              <a className={activeComponent === \"home\" ? \"active\" : \"inactive\"} \n                href=\"#home\" onClick={handleClick(\"home\")}>\n                <FontAwesomeIcon className=\"home fa-2x\" icon={faHome} />\n              </a>\n            </li>\n\n            <li className=\"tab\">\n              <a className={activeComponent === \"experience\" ? \"active\" : \"inactive\"}\n                href=\"#experience\" onClick={handleClick(\"experience\")}>\n                <FontAwesomeIcon className=\"experience fa-2x\" icon={faToolbox} />\n              </a>\n            </li>\n\n            <li className=\"tab\">\n              <a className={activeComponent === \"open-source\" ? \"active\" : \"inactive\"}\n                href=\"#open-source\" onClick={handleClick(\"open-source\")}>\n                <FontAwesomeIcon className=\"open-source fa-2x\" icon={faCode} />\n              </a>\n            </li>\n\n            <li className=\"tab\">\n              <a className={activeComponent === \"projects\" ? \"active\" : \"inactive\"}\n                href=\"#projects\" onClick={handleClick(\"projects\")}>\n                <FontAwesomeIcon className=\"projects fa-2x\" icon={faLayerGroup} />\n              </a>\n            </li>\n\n            <li className=\"tab\">\n              <a className={activeComponent === \"presentations\" ? \"active\" : \"inactive\"}\n                href=\"#presentations\" onClick={handleClick(\"presentations\")}>\n                <FontAwesomeIcon className=\"presentations fa-2x\" icon={faChartBar} />\n              </a>\n            </li>\n\n            <li className=\"tab\">\n              <a className={activeComponent === \"current\" ? \"active\" : \"inactive\"}\n                href=\"#current\" onClick={handleClick(\"current\")}>\n              <FontAwesomeIcon className=\"current fa-2x\" icon={faBolt} />\n              </a>\n            </li>\n\n          </ul>\n\n    </div>\n  );\n};\n\nexport default NavBarMobile;\n","import React, { useEffect, useState } from \"react\";\nimport \"./nav-home-animation.css\";\n\nconst NavHomeAnimation: React.FC = () => {\n  // let experience = \"Open Source Contributor: Mozilla\"\n  // experience = \"Four Years Engineering Experience\\nat AG Laser Technology\"\n  // experience = \"Past: Bachelor of Mechanical Engineering\\nat SUNY Stony Brook University\"\n  const [stringDisplay, setStringDisplay] = useState<string>(\"\");\n\n  /*\n\n  make the cursor blink when finished\n\n  */\n\n\n\n\n\n  useEffect(() => {\n    const insertString = (str: string) => {\n      return new Promise((res, rej) => {\n        setTimeout(() => {\n          setStringDisplay(str);\n          res();\n        }, 45);\n      });\n    };\n\n    const removeString = (str: string) => {\n      return new Promise((res, rej) => {\n        setTimeout(() => {\n          setStringDisplay(str);\n          res();\n        }, 20);\n      });\n    };\n\n    const pauseAnimation = (msWait: number) => {\n      return new Promise((res, rej) => {\n        setTimeout(() => {\n          res();\n        }, msWait);\n      });\n    };\n\n    const runAnimation = async () => {\n      await pauseAnimation(500);\n      while (true) {\n        const experienceCycle = [\n          \"Open Source Contributor for Mozilla\",\n          \"Past: Bachelor of Mechanical Engineering\\nat SUNY Stony Brook University\",\n          \"Four Years Engineering Experience\\nat AG Laser Technology\",\n        ];\n\n        for (let j = 0; j < experienceCycle.length; j++) {\n          const experience = experienceCycle[j];\n\n          for (let i = 0; i <= experience.length; i++) {\n            await insertString(experience.slice(0, i));\n          }\n\n          await pauseAnimation(2000);\n\n          for (let i = experience.length; i >= 0; i--) {\n            await removeString(experience.slice(0, i));\n          }\n        }\n      }\n    };\n    runAnimation();\n  }, []);\n\n  const formattedSubText = stringDisplay.split(\"\\n\");\n\n  const subText = formattedSubText.map((str, idx) => {\n    return (\n      <div key={idx}>\n        <span className=\"my-status\">{str}</span>\n\n        {idx === formattedSubText.length - 1 ? (\n          <span className=\"cursor\"></span>\n        ) : (\n          false\n        )}\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"nav-home-animation\">\n      <br />\n      <div className=\"animation\">{subText}</div>\n    </div>\n  );\n};\n\nexport default NavHomeAnimation;\n","import React from \"react\";\nimport profileImage from \"../img/michael-pic.png\";\nimport NavHomeAnimation from \"./nav-home-animation\";\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./nav-home.css\";\n\ninterface Props {\n  handleNavItem: (item: string) => void;\n}\n\nconst NavHome: React.FC<Props> = ({ handleNavItem }) => {\n  // deleting \"horizontal\" gives you a good \"mobile view\" looking application\n\n  const clickImg = () => {\n    // direct user to \"experience\" along with the correct nav animation and location\n    handleNavItem(\"experience\");\n    const exp = document.getElementById(\"experience_id\");\n    if (exp) {\n      exp.click();\n    }\n  };\n\n  return (\n    <div className=\"nav-home row\">\n      <div className=\"card-content col l6\">\n        <h3>Michael McCabe</h3>\n        <p className=\"my-status\">Software Developer Master's Student</p>\n        <p className=\"my-status\">at Boston University</p>\n        <br />\n        <hr />\n        <NavHomeAnimation />\n      </div>\n      <div className=\"card-image col l6\" onClick={clickImg}>\n        <span className=\"arrow\">\n          <FontAwesomeIcon className=\"code-fork fa-4x\" icon={faAngleRight} />\n        </span>\n        <img\n          src={profileImage}\n          alt=\"profile\"\n          style={{ filter: \"brightness(100%)\" }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default NavHome;\n","import React from \"react\";\n\nimport \"./nav-experience.css\";\n\nconst NavExperience: React.FC = () => {\n  return (\n    <>\n      <div className=\"card-stacked nav-experience\">\n        <div className=\"card-content\">\n          <h3 className=\"card-title\">Experience</h3>\n          <hr />\n          <p>\n            Hi, my name is Michael McCabe. I am a Software Developer Master's\n            Student, Engineer and Open Source contributor.\n          </p>\n          <p>\n            When I was a Mechanical Engineer, I have spent a considerable amount\n            of time working with both JavaScript and Python, and frameworks such\n            as React and Node.js in my spare time. At work, I have used these\n            tools to both automate and maximize productivity. In particular, I\n            developed a full-stack production planner web application that\n            solved many production-related business problems for my employer.\n          </p>\n          <p>\n            After two years of being a Software Developer hobbyist, I have come\n            to the conclusion that Software Development is the correct career\n            choice. I have been enrolled in Boston University's Software\n            Development Master program (online) ever since.\n          </p>\n          <p>Expected graduation: August 2021</p>\n          <hr />\n          <h4 className=\"card-sub-title\">Courses Completed</h4>\n          <p>\n            <b>Server-Side Web Development:</b> Hands-on web application\n            development using Node.js, MongoDB (NoSQL), JavaScript, Express\n            along with PHP/MySQL.\n          </p>\n          <p>\n            <b>Database Design and Implementation for Business:</b> A deep dive\n            into relational databases, SQL, day-to-day transactional databases,\n            data warehouses, distributed databases and cloud services.\n          </p>\n          <p>\n            <b>Information Structures with Python:</b> A focus on a strong\n            foundation in Python programming.\n          </p>\n          <hr />\n          <h4 className=\"card-sub-title skills-sub-title\">Skills</h4>\n          <div className=\"row skill-listing center\">\n            <div className=\"col l3 m6 s12\">\n              <p>JavaScript</p>\n            </div>\n            <div className=\"col l3 m6 s12\">\n              <p>Python</p>\n            </div>\n            <div className=\"col l3 m6 s12\">\n              <p>Node.js</p>\n            </div>\n            <div className=\"col l3 m6 s12\">\n              <p>Express</p>\n            </div>\n            <div className=\"col l3 m6 s12\">\n              <p>React/Redux</p>\n            </div>\n            <div className=\"col l3 m6 s12\">\n              <p>MongoDB</p>\n            </div>\n            <div className=\"col l3 m6 s12\">\n              <p>PostgreSQL</p>\n            </div>\n            <div className=\"col l3 m6 s12\">\n              <p>HTML/CSS</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default NavExperience;\n","import React from \"react\";\n\ninterface Props {\n  title: string;\n  problem: string;\n  solution: string;\n  prUrl: string;\n  submittedCodeUrl: string;\n  tools: string[];\n}\n\n// const OpenSourceCard: React.FC<Props> = ({ repo, title, description, tools }) => {\nconst OSContributionsCard: React.FC<Props> = ({\n  title,\n  problem,\n  solution,\n  prUrl,\n  submittedCodeUrl,\n  tools,\n}) => {\n  return (\n    <div className=\"pull-request row\">\n      <div className=\"pull-request-title\">\n        <h4 className=\"pr-sub-title\">{title}</h4>\n        <div className=\"language-border\">\n          {tools.map((tool, idx) => {\n            return <span key={idx}>{tool}</span>;\n          })}\n        </div>\n      </div>\n\n      <div className=\"row open-source-description\">\n        <div className=\"col l4 m6 s12 problem\">\n          <span>\n            <p className=\"description-sub-title\">Problem</p>\n            <p>{problem}</p>\n          </span>\n        </div>\n        <div className=\"col l4 m6 s12 solution\">\n          <span>\n            <p className=\"description-sub-title\">Solution</p>\n            <p>{solution}</p>\n          </span>\n        </div>\n        <p className=\"col l4 m12 s12 links\">\n          <span>\n            <p className=\"description-sub-title\">Links</p>\n          </span>\n          <div className=\"row\">\n            <p className=\"col l12 m6 s12\">\n              <a href={prUrl} target=\"_blank\">\n                Pull Request\n              </a>\n            </p>\n\n            <p className=\"col l12 m6 s12\">\n              <a href={submittedCodeUrl} target=\"_blank\">\n                Submitted Code\n              </a>\n            </p>\n          </div>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default OSContributionsCard;\n","const OSContributionsData = [\n  {\n    title: \"web-ext: Enable extensions to load on android build variants\",\n    problem:\n      \"Bug: Mozilla's Android browser build variants were not directly supported by Mozilla's web-ext.\",\n    solution:\n      \"Logic was redefined for what a user-specified APK component should be evaluated to. An additional test was added to account for new logic and code coverage.\",\n    prUrl: \"https://github.com/mozilla/web-ext/pull/1918\",\n    submittedCodeUrl: \"https://github.com/mozilla/web-ext/pull/1918/files\",\n    tools: [\"JavaScript\", \"Node.js\"],\n  },\n  {\n    title:\n      \"web-ext: Support for android build variants without requiring a fully qualified value\",\n    problem:\n      \"If a user wishes to test their Mozilla extension on an Android build variant, they must write a redundant CLI command.\",\n    solution:\n      \"A feature was introduced to allow condensed commands with additional unit tests.\",\n    prUrl: \"https://github.com/mozilla/web-ext/pull/1941\",\n    submittedCodeUrl:\n      \"https://github.com/mozilla/web-ext/commit/c083c079ddad11031bfdf913852ea2e70f3d5ab3\",\n    tools: [\"JavaScript\", \"Node.js\"],\n  },\n  {\n    title: \"Add-ons Code Manager: Component layout fix\",\n    problem:\n      \"Bug: A particular component inside Mozilla's code manager was displayed incorrectly.\",\n    solution:\n      \"The offending display style affecting the layout was found and removed.\",\n    prUrl: \"https://github.com/mozilla/addons-code-manager/pull/1605\",\n    submittedCodeUrl:\n      \"https://github.com/mozilla/addons-code-manager/pull/1605/files\",\n    tools: [\"SCSS\", \"CSS\"],\n  },\n];\n\nexport default OSContributionsData;\n","import React from \"react\";\nimport OSContributionsCard from \"../nav-item-components/os-contributions-card\";\nimport OSContributionsData from \"../data/os-contributions-data\";\n\nimport \"./nav-open-source.css\";\n\nconst NavOpenSource: React.FC = () => {\n  return (\n    <>\n      <div className=\"card-stacked nav-open-source\">\n        <div className=\"card-content\">\n          <h3 className=\"card-title\">Open Source</h3>\n          <hr />\n          <div className=\"links-container pull-request-title\">\n            <div className=\"row sub-title-links\">\n              <p className=\"col l12 m12 s12\">\n                <a\n                  href=\"https://mozillians.org/en-US/u/MikeM711/\"\n                  target=\"_blank\"\n                >\n                  Mozillian Account\n                </a>\n              </p>\n              <p className=\"col l12 m12 s12\">\n                <a\n                  href=\"https://wiki.mozilla.org/Add-ons/Contribute/Recognition\"\n                  target=\"_blank\"\n                >\n                  Contributor Recognition\n                </a>{\" \"}\n                &nbsp;(MikeM711)\n              </p>\n            </div>\n          </div>\n\n          <div className=\"pull-requests\">\n            {OSContributionsData.map((contribution, idx) => {\n              return (\n                <OSContributionsCard\n                  key={idx}\n                  title={contribution.title}\n                  problem={contribution.problem}\n                  solution={contribution.solution}\n                  prUrl={contribution.prUrl}\n                  submittedCodeUrl={contribution.submittedCodeUrl}\n                  tools={contribution.tools}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default NavOpenSource;\n","import React from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCodeBranch, faLaptopCode } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface Props {\n  repo: any | undefined;\n  title: string;\n  description: string[];\n  tools: string[];\n}\n\nconst ProjectCard: React.FC<Props> = ({ repo, title, description, tools }) => {\n  return (\n    <div className=\"col offset-l1 l5 project-description\">\n      <p className=\"project-title\">{title}</p>\n\n      {repo !== undefined ? (\n        <div className=\"github-stats-card\">\n          <span className=\"star-count\">{repo.stargazers_count} ⭐️</span>\n          <span className=\"fork-count\">\n            {repo.forks_count}\n            <FontAwesomeIcon className=\"code-fork fa-1x\" icon={faCodeBranch} />\n          </span>\n        </div>\n      ) : (\n        <div className=\"github-stats-card-wait\">Loading GitHub stats...</div>\n      )}\n\n      <div className=\"language-border\">\n        {tools.map((tool, idx) => {\n          return <span key={idx}>{tool}</span>\n        })}\n      </div>\n\n      <div className=\"project-content\">\n        {description.map((singleDescription, idx) => {\n          return <p key={idx}>{singleDescription}</p>;\n        })}\n      </div>\n      <div className=\"links-card row\">\n        <p className=\"col l6 m6 s6\">&lt;/&gt; Code</p>\n        <p className=\"col l6 m6 s6\">\n          <FontAwesomeIcon className=\"code-fork fa-1x\" icon={faLaptopCode} />{\" \"}\n          Demo\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectCard;\n","import React from \"react\";\n\ninterface Props {\n  alt: string;\n  appImage: string;\n}\n\nconst ProjectTabletDisplay: React.FC<Props> = ({ alt, appImage }) => {\n  return (\n    <>\n      <img alt={alt} src={appImage} />\n      <span className=\"monitor-circle\"></span>\n    </>\n  );\n};\n\nexport default ProjectTabletDisplay;\n","import parseit from \"../img/parseit.png\";\nimport youtubeScraper from \"../img/youtube-scraper.png\";\nimport handwritingRecognition from \"../img/handwriting-recognition.png\";\n\nconst projectData = [\n    {\n        \"title\": \"ParseIt\",\n        \"repoName\": \"ParseIt\",\n        \"description\": [\"A full-stack web tool that allows non-technical people the ability to extract information, or perform data science, for large amounts of PDF documents or complex text data.\",\n        \"ParseIt comes with 21 simple, open-ended modules that can either add, remove, replace, split or save text. The purpose of ParseIt is to \\\"stack\\\" these modules on top of each other, and have your input funneled through each module.\",\n        \"The tool incorporates text-preview features that use text highlighting as a guide to let the user know exactly how they are parsing their data, before they commit to a parsing action.\"\n        ],\n        \"projectImage\": parseit,\n        \"alt\": \"parseIt\",\n        \"tools\": [\"JavaScript\", \"Node.js\", \"Express\", \"React/Redux\"]\n    },\n    {\n        \"title\": \"YouTube Comment Scraper\",\n        \"repoName\": \"React-YouTube-Comment-Section-Scraper\",\n        \"description\": [\"A web application that uses a bot to render and capture YouTube comments, as well as comment characteristics, on a given YouTube video.\", \n        \"When the application is supplied with comments, users are able to filter comments using variety of filter functions that can be chained together.\"\n        ],\n        \"projectImage\": youtubeScraper,\n        \"alt\": \"youtube-scraper\",\n        \"tools\": [\"JavaScript\", \"Node.js\", \"Express\", \"React/Redux\"]\n    },\n    {\n        \"title\": \"Handwriting Recognition\",\n        \"repoName\": \"Deep-Learning-Handwriting-Recognition\",\n        \"description\": [\"A web tool that utilizes pre-trained deep learning models to predict users' handwriting using a resizable drawing canvas.\", \n        \"The full A.I. network utilizes a \\\"jury\\\" of 5 convolutional models that takes the aggregate of all results to create a singular prediction.\", \n        \"See my Python Notebook inside the Code link for more detail on how these models were trained.\"\n        ],\n        \"projectImage\": handwritingRecognition,\n        \"alt\": \"handwriting-recognition\",\n        \"tools\": [\"JavaScript\", \"Python\", \"Django\", \"React/Redux\"]\n    }\n]\n\nexport default projectData","import React from \"react\";\nimport ProjectCard from \"../nav-item-components/project-card\";\nimport ProjectTabletDisplay from \"../nav-item-components/project-tablet-display\";\nimport projectData from \"../data/project-data\";\n\nimport \"./nav-projects.css\";\n\ninterface Props {\n  repositories: any[];\n}\n\nconst MobileProjects: React.FC<Props> = ({ repositories }) => {\n  return (\n    <>\n      <div className=\"card-stacked nav-projects\">\n        <div className=\"card-content\">\n          <h3 className=\"card-title\">Projects</h3>\n          <hr />\n        </div>\n\n        {projectData.map((project, idx) => {\n          // Find repo name\n          let projectRepo;\n          for (let repo of repositories) {\n            if (repo.name === project.repoName) {\n              projectRepo = repo;\n            }\n          }\n\n          return (\n            <div\n              key={project.repoName}\n              className={`row project-listing ${project.repoName}`}\n            >\n              <ProjectCard\n                repo={projectRepo}\n                title={project.title}\n                description={project.description}\n                tools={project.tools}\n              />\n              <div className=\"col l6 project-thumb\">\n                <ProjectTabletDisplay\n                  alt={project.alt}\n                  appImage={project.projectImage}\n                />\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default MobileProjects;\n","import React from \"react\";\n\nimport \"./nav-presentations.css\";\n\nconst NavPresentations: React.FC = () => {\n  return (\n    <>\n      <div className=\"card-stacked nav-presentations\">\n        <div className=\"card-content\">\n          <h3 className=\"card-title\">Presentations</h3>\n          <hr />\n          <h4 className=\"card-sub-title skills-sub-title\">\n            CS512 Final Project: ImageOCR Module\n          </h4>\n          <p>\n            The ImageOCR module below simplifies the optical character recognition\n            (OCR) process for extracting text off of images. In addition, this\n            module features a method that can manipulate a user's image into\n            pure back and white (or inverse) for more efficient reading. When\n            complete, the user has the option to create HTML for a pretty\n            output.\n          </p>\n          <p>\n            Using this tool, users could run through thousands of\n            similarly-structured business forms or reciepts and extract text\n            from them, as opposted to manually typing out text found in the\n            images.\n          </p>\n          <p>\n            <a\n              href=\"https://github.com/MikeM711/Image-To-HTML-Text\"\n              target=\"_blank\"\n            >\n              GitHub Repo\n            </a>\n          </p>\n\n          <div className=\"iframe-wrapper\">\n            <div className=\"iframe-container\">\n              <iframe\n                src=\"https://www.youtube.com/embed/gVSXD92PyZc?rel=0;\"\n                frameBorder=\"0\"\n                allow=\"encrypted-media\"\n                allowFullScreen\n                title=\"video\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default NavPresentations;\n","import React from \"react\";\n\nconst NavCurrent: React.FC = () => {\n  return (\n    <>\n      <div className=\"card-stacked nav-current\">\n        <div className=\"card-content\">\n          <h3 className=\"card-title\">Current</h3>\n          <hr/>\n          <p>long string</p>\n          <p>long string</p>\n          <p>long string</p>\n          <p>long string</p>\n          <p>long string</p>\n          <p>long string</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default NavCurrent;\n","import React from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCodeBranch, faLaptopCode } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface Props {\n  repo: any | undefined;\n  title: string;\n  description: string[];\n  tools: string[];\n}\n\nconst ProjectCardMobile: React.FC<Props> = ({ repo, title, description, tools }) => {\n  return (\n    <div className=\"col l12 project-description row\">\n      <p className=\"project-title\">{title}</p>\n\n      {repo !== undefined ? (\n        <div className=\"github-stats-card\">\n          <span className=\"star-count\">{repo.stargazers_count} ⭐️</span>\n          <span className=\"fork-count\">\n            {repo.forks_count}\n            <FontAwesomeIcon className=\"code-fork fa-1x\" icon={faCodeBranch} />\n          </span>\n        </div>\n      ) : (\n        <div className=\"github-stats-card-wait\">Loading GitHub stats...</div>\n      )}\n\n      <div className=\"language-border\">\n        {tools.map((tool, idx) => {\n          return <span key={idx}>{tool}</span>\n        })}\n      </div>\n\n      <div className=\"project-content\">\n        {description.map((singleDescription, idx) => {\n          return <p key={idx}>{singleDescription}</p>;\n        })}\n      </div>\n      <div className=\"links-card\">\n        <p className=\"col l6 m6 s6\">&lt;/&gt; Code</p>\n        <p className=\"col l6 m6 s6\">\n          <FontAwesomeIcon className=\"code-fork fa-1x\" icon={faLaptopCode} />{\" \"}\n          Demo\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectCardMobile;\n","import React from \"react\";\n\nimport ProjectCardMobile from \"../nav-item-components/project-card-mobile\";\nimport ProjectTabletDisplay from \"../nav-item-components/project-tablet-display\";\nimport projectData from \"../data/project-data\";\nimport './mobile-projects.css';\n\ninterface Props {\n  repositories: any[];\n}\n\nconst MobileProjects: React.FC<Props> = ({ repositories }) => {\n  return (\n    <>\n    <div className=\"card-content mobile-projects\">\n      <h3 className=\"card-title\">Projects</h3>\n      <hr />\n      {projectData.map((project, idx) => {\n        // Find repo name\n        let projectRepo;\n        for (let repo of repositories) {\n          if (repo.name === project.repoName) {\n            projectRepo = repo;\n          }\n        }\n\n        return (\n          <div\n            key={project.repoName}\n            className={`project-listing-mobile ${project.repoName}`}\n          >\n            <ProjectCardMobile\n              repo={projectRepo}\n              title={project.title}\n              description={project.description}\n              tools={project.tools}\n            />\n            <div className=\"project-thumb project-thumb-mobile\">\n              <ProjectTabletDisplay\n                alt={project.alt}\n                appImage={project.projectImage}\n              />\n            </div>\n          </div>\n        );\n      })}\n      </div>\n    </>\n  );\n};\n\nexport default MobileProjects;\n","import React, { useState, useEffect } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport axios from \"axios\";\n\nimport NavBar from \"./nav-items/navbar\";\nimport NavBarMobile from \"./nav-items/navbar-mobile\";\nimport NavHome from \"./nav-items/nav-home\";\nimport NavExperience from \"./nav-items/nav-experience\";\nimport NavOpenSource from './nav-items/nav-open-source';\nimport NavProjects from './nav-items/nav-projects';\nimport NavPresentations from './nav-items/nav-presentations';\nimport NavCurrent from './nav-items/nav-current';\nimport MobileProjects from './mobile-components/mobile-projects';\n\nimport \"./App.css\";\nimport \"./App-mobile.css\";\n\nconst App: React.FC = () => {\n  const [windowSize, setWindowSize] = useState<number>(window.innerWidth);\n  const [activeComponent, setActiveComponent] = useState<string>(\"home\");\n  const [repositories, setRepositories] = useState<any[]>([]);\n\n  const isMobile: boolean = windowSize < 1042;\n  const navItems = [\"home\", \"experience\", \"open-source\", \"projects\", \"presentations\", \"current\"];\n\n  useEffect(() => {\n    // https://blog.logrocket.com/developing-responsive-layouts-with-react-hooks/\n    /* Inside of a \"useEffect\" hook add an event listener that updates\n       the \"width\" state variable when the window size changes */\n    window.addEventListener(\"resize\", () => setWindowSize(window.innerWidth));\n\n    axios.get(`https://api.github.com/users/MikeM711/repos`).then((res) => {\n      setRepositories(res.data);\n    });\n\n    /* passing an empty array as the dependencies of the effect will cause this\n       effect to only run when the component mounts, and not each time it updates.\n       We only want the listener to be added once */\n  }, []);\n\n  const handleNavItem = (item: string) => {\n    setActiveComponent(item);\n  };\n\n  return (\n    <div id=\"app\" className=\"app-root\">\n      {isMobile ? (\n        <div className=\"mobile\">\n          <NavBarMobile handleNavItem={handleNavItem} activeComponent={activeComponent}/>\n          <div className=\"card mobile-card\">\n            <NavExperience />\n          </div>\n          <div className=\"card mobile-card\">\n            <NavOpenSource/> \n          </div>\n          <div className=\"card mobile-card\">\n            <MobileProjects repositories={repositories}/> \n          </div>\n          <div className=\"card mobile-card\">\n            <NavPresentations /> \n          </div>\n        </div>\n        \n      ) : (\n        <div className=\"desktop\">\n          <div className=\"row nav-main valign-wrapper\">\n            <div className=\"col l12\">\n              <NavBar handleNavItem={handleNavItem} activeComponent={activeComponent}/>\n              <div className=\"main-card card\">\n\n                {navItems.map((navItem, idx) => {\n                  return(\n                    <div className=\"item-view\" key={idx}>\n                      {activeComponent === navItem ? \n                      \n                      <CSSTransition\n                        timeout={{\n                          enter: 800,\n                        }}\n                        appear={true}\n                        in={true}\n                        classNames=\"fade\"\n                        unmountOnExit\n                      >\n                        <>\n                        {navItem === \"home\" ? <NavHome handleNavItem={handleNavItem} /> : false}\n                        {navItem === \"experience\" ? <NavExperience /> : false}\n                        {navItem === \"open-source\" ? <NavOpenSource /> : false}\n                        {navItem === \"projects\" ? <NavProjects \n                        repositories={repositories}/> : false}\n                        {navItem === \"presentations\" ? <NavPresentations /> : false}\n                        {navItem === \"current\" ? <NavCurrent /> : false}\n                          \n                          <div className=\"overlay\"></div>\n                        </>\n                      </CSSTransition>\n                      : false}\n                    </div>\n                  )\n                })}\n                \n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}